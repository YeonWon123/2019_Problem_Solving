#include <iostream>
#include <queue>
using namespace std;

char **board;
queue<int> column_list;
void star(int N, int row);

int main()
{
	int N;
	cin >> N;

	board = new char*[N+1];
	for (int i = 0; i < N+1; i++)
		board[i] = new char[2*N+1];

	for (int i = 0; i < N+1; i++)
		for (int j = 0; j < 2*N+1; j++)
			board[i][j] = ' ';

	int column = 3;
	int row = 4;
	int sw = 1; // 0ÀÌ¸é Â¦¼ö, 1ÀÌ¸é È¦¼ö
	int queuein = 3;
	column_list.push(3);
	int count = 2;


	star(N, 1);
	while (1)
	{
		if (queuein == N) break;
		if (queuein % 2 == 0)
		{
			if (sw == 1)
			{
				row = row + 3;
				sw = 0;
			}
			star(N - queuein, row);
			star(N + queuein, row);

			column_list.push(queuein - 3);
			column_list.push(queuein + 3);
		}
		else
		{
			if (sw == 0)
			{
				row = row + 3;
		//		cout << "row : " << row << endl;
				sw = 1;
			}
			int front, back;
			front = column_list.front();
	//		cout << "È¦¼ö ¿ÞÂÊ: " << front << " ";
			back = column_list.back();
	//		cout << "È¦¼ö ¿À¸¥ÂÊ: " << back << " ";
			while (!column_list.empty())
			{
				int a = column_list.front();
				star(N - a, row);
				star(N + a, row);
				column_list.pop();
			}
			if (queuein != 3 && queuein != row-1)
			{
				column_list.push(front-3);
				column_list.push(back+3);
			}
		}

		if (column_list.empty())
		{
			if (N == 3 * count) break;
			count++;
			column = column * 2;
			queuein = column;
		}
		else
		{
			queuein = column_list.front();
			if (queuein % 2 == 0) column_list.pop();
		}
	}
	/*
	star(N - 3, 4);
	star(N + 3, 4);
	if (N == 6) goto PRINT;

	star(N - 6, 7);
	star(N + 6, 7);

	star(N - 9, 10);
	star(N - 3, 10);
	star(N + 3, 10);
	star(N + 9, 10);
	if (N == 12) goto PRINT;

	star(N - 12, 13);
	star(N + 12, 13);

	star(N - 15, 16);
	star(N - 9, 16);
	star(N + 9, 16);
	star(N + 15, 16);

	star(N - 18, 19);
	star(N - 6, 19);
	star(N + 6, 19);
	star(N + 18, 19);

	star(N - 21, 22);
	star(N - 15, 22);
	star(N - 9, 22);
	star(N - 3, 22);
	star(N + 3, 22);
	star(N + 9, 22);
	star(N + 15, 22);
	star(N + 21, 22);
	if (N == 24) goto PRINT;
	*/
	for (int i = 1; i < N+1; i++)
	{
		for (int j = 1; j < 2*N+1; j++)
			cout << board[i][j];

		if (i == N) break;
		cout << "\n";
	}

	return 0;
}

void star(int N, int row)
{
	board[row][N] = '*';

	board[row + 1][N - 1] = '*';
	board[row + 1][N + 1] = '*';

	board[row + 2][N - 2] = '*';
	board[row + 2][N - 1] = '*';
	board[row + 2][N] = '*';
	board[row + 2][N + 1] = '*';
	board[row + 2][N + 2] = '*';
}